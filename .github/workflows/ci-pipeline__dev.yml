name : CI Pipeline - DEV
on:
  workflow_dispatch:
  push:
    branches:
      - dev

env:
  GIT__BRANCH            : 'dev'
  RELEASE_TYPE           : 'minor'
  PACKAGE_NAME           : 'osbot_serverless_flows'
  DOCKER__CONTEXT        : "."
  DOCKER__HTTP_PORT      : 5002
  DOCKER__FILE           : './deploy/docker/osbot-serverless-flows/Dockerfile'
  DOCKER__FILE__FOR_TESTS: './deploy/docker/osbot-serverless-flows__integration-tests/Dockerfile'
  DOCKER_HUB__TOKEN      : ${{ secrets.DOCKER_HUB__TOKEN      }}
  DOCKER_HUB__USERNAME   : "diniscruz"
  LAMBDA_SHELL__AUTH_KEY : ${{ secrets.LAMBDA_SHELL__AUTH_KEY }}

jobs:

  run-unit-and-integration-tests:
    if: False
    name: "Run Unit & Integration Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests and Integration Tests
        uses: ./.github/actions/pytest__run-unit-and-integration

  increment-tag:
    #if: False
    name: Increment Tag - DEV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Increment Tag
        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/git__increment-tag@dev
        with:
          release_type: ${{ env.RELEASE_TYPE }}
#    needs:
#      - run-unit-and-integration-tests

  publish-to-pypi:
    name: "Publish to: PYPI"
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Git Update Current Branch
        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/git__update_branch@dev

      - name: publish-to-pypi
        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/pypi__publish@dev
    needs:
      - increment-tag

  publish-to-aws-ecr:
    name: "Publish to: AWS ECR"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Wait for PyPI publish"
        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/pypi__wait-for-publish@dev

      - name: "Publish to: AWS ECR"
        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/aws__publish__ecr@dev
        env:
          AWS_ACCOUNT_ID       : ${{ secrets.AWS_ACCOUNT_ID__654654216424        }}
          AWS_ACCESS_KEY_ID    : ${{ secrets.AWS_ACCESS_KEY_ID__654654216424     }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY__654654216424 }}
          AWS_DEFAULT_REGION   : ${{ secrets.AWS_DEFAULT_REGION__654654216424    }}
    needs:
      - publish-to-pypi

#  publish-to-docker-hub:
#    name: "Publish to: Docker Hub"
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Deploy to Docker Hub (current version)
#        uses: owasp-sbot/OSBot-GitHub-Actions/.github/actions/docker-hub__publish@dev
#    needs: publish-to-pypi

  deploy-lambda-function:
    name: Deploy Lambda Function
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests and Integration Tests
        uses: ./.github/actions/aws__deploy-lambda
        env:
          AWS_ACCOUNT_ID__654654216424       : ${{ secrets.AWS_ACCOUNT_ID__654654216424        }}
          AWS_ACCESS_KEY_ID__654654216424    : ${{ secrets.AWS_ACCESS_KEY_ID__654654216424     }}
          AWS_SECRET_ACCESS_KEY__654654216424: ${{ secrets.AWS_SECRET_ACCESS_KEY__654654216424 }}
          AWS_DEFAULT_REGION__654654216424   : ${{ secrets.AWS_DEFAULT_REGION__654654216424    }}
    needs:
      - publish-to-aws-ecr

  run-qa-tests:
    name: "Run QA Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests and Integration Tests
        uses: ./.github/actions/pytest__run-qa
    needs:
      - deploy-lambda-function